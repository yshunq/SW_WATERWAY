C51 COMPILER V9.00   XS_LINE_FUNCTION                                                      09/02/2024 14:01:21 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE XS_LINE_FUNCTION
OBJECT MODULE PLACED IN ..\hex\XS_line_function.obj
COMPILER INVOKED BY: D:\keil5\C51\BIN\C51.EXE ..\main\XS_line_function.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(..\user;.
                    -.\display) DEBUG OBJECTEXTEND PRINT(.\LIST\XS_line_function.lst) OBJECT(..\hex\XS_line_function.obj)

line level    source

   1          //#include "config.h"
   2          //
   3          //void dis_line_function(u8 num,u8 flag);//1 3d  2 7d  3 xdo  flag = 0 ON  1 OFF
   4          //
   5          //const u8  MAIN_KEY_LINE_FUNCTION = 4;
   6          //const u16 MAIN_LINE_FUNCTION[]=
   7          //{
   8          //      912,1036, 0,108, //1 …Ë÷√
   9          //      682,813,407,470,
  10          //      682,813,563,631,
  11          //      682,813,750,814,
  12          //};
  13          //
  14          //void main_xs_line_function(void)
  15          //{
  16          //      u8 key;
  17          //      DIS_PICNUM(Pic_LINE_FUNCTION);
  18          //      
  19          //      dis_line_function(1,X3D_LINE_FUNCTION_FLAG);//num = 1 3d  2 7d  3 xdo  flag = 0 ON  1 OFF
  20          //      dis_line_function(2,X7D_LINE_FUNCTION_FLAG);//num = 1 3d  2 7d  3 xdo  flag = 0 ON  1 OFF
  21          //      dis_line_function(3,XDO_LINE_FUNCTION_FLAG);//num = 1 3d  2 7d  3 xdo  flag = 0 ON  1 OFF
  22          //      
  23          //      do{
  24          //              delay_ms(1);
  25          //              if(KEY_YES!=0x00)
  26          //              {
  27          //                      ADS7843_KEY(); //…®√Ë∞¥º¸
  28          //                      key=KEY_FANHUI(MAIN_KEY_LINE_FUNCTION,MAIN_LINE_FUNCTION); 
  29          //                      switch(key)
  30          //                      {
  31          //                              case 1:  //∑µªÿ
  32          //                                      XIANG1();
  33          //                                      INTERFACE = PAGE_ADVANCED_SETTINGS;
  34          //                                      goto over_main_xs_set_function;
  35          //                                      break;
  36          //                              case 2:
  37          //                                XIANG1();
  38          //                                if(X3D_LINE_FUNCTION_FLAG == 0)
  39          //                                      {
  40          //                                              X3D_LINE_FUNCTION_FLAG = 1;
  41          //                                              dis_line_function(1,X3D_LINE_FUNCTION_FLAG);
  42          //                                      }
  43          //                                      else
  44          //                                      {
  45          //                                              X3D_LINE_FUNCTION_FLAG = 0;
  46          //                                              dis_line_function(1,X3D_LINE_FUNCTION_FLAG);
  47          //                                      }
  48          //                                      write_x3d_line_function_flag();
  49          //                                      KEY_YES = 0;
  50          //                                      break;
  51          //                              case 3:
  52          //                                XIANG1();
  53          //                                      if(X7D_LINE_FUNCTION_FLAG == 0)
  54          //                                      {
C51 COMPILER V9.00   XS_LINE_FUNCTION                                                      09/02/2024 14:01:21 PAGE 2   

  55          //                                              X7D_LINE_FUNCTION_FLAG = 1;
  56          //                                              dis_line_function(2,X7D_LINE_FUNCTION_FLAG);
  57          //                                      }
  58          //                                      else
  59          //                                      {
  60          //                                              X7D_LINE_FUNCTION_FLAG = 0;
  61          //                                              dis_line_function(2,X7D_LINE_FUNCTION_FLAG);
  62          //                                      }
  63          //                                      write_x7d_line_function_flag();
  64          //                                      KEY_YES = 0;
  65          //                                      break;
  66          //                              case 4:
  67          //                                      XIANG1();
  68          //                                      if(XDO_LINE_FUNCTION_FLAG == 0)
  69          //                                      {
  70          //                                              XDO_LINE_FUNCTION_FLAG = 1;
  71          //                                              dis_line_function(3,XDO_LINE_FUNCTION_FLAG);
  72          //                                      }
  73          //                                      else
  74          //                                      {
  75          //                                              XDO_LINE_FUNCTION_FLAG = 0;
  76          //                                              dis_line_function(3,XDO_LINE_FUNCTION_FLAG);
  77          //                                      }
  78          //                                      write_xdo_line_function_flag();
  79          //                                      KEY_YES = 0;
  80          //                                      break;
  81          //                      }
  82          //                      KEY_YES = 0;
  83          //              }
  84          //      }while(1);
  85          //      over_main_xs_set_function:
  86          //      _nop_();
  87          //}
  88          //
  89          //void dis_line_function(u8 num,u8 flag)
  90          //{
  91          //      switch(num)
  92          //      {
  93          //              case 1:
  94          //          DIS_DEL_DIS(Pic_LINE_FUNCTION,682,407,813,470,682,407);
  95          //                      if(flag == 0)
  96          //                      {
  97          //                              DIS_FONT_C(0x07,0xfe,2,0x03,731,423,"ON");
  98          //                      }
  99          //                      else
 100          //                      {
 101          //                              DIS_FONT_C(0x07,0xfe,3,0x03,723,423,"OFF");
 102          //                      }
 103          //                break;
 104          //              case 2:
 105          //          DIS_DEL_DIS(Pic_LINE_FUNCTION,682,563,813,631,682,563);
 106          //                      if(flag == 0)
 107          //                      {
 108          //                              DIS_FONT_C(0x07,0xfe,2,0x03,731,582,"ON");
 109          //                      }
 110          //                      else
 111          //                      {
 112          //                              DIS_FONT_C(0x07,0xfe,3,0x03,723,582,"OFF");
 113          //                      }
 114          //                break;
 115          //              case 3:
 116          //          DIS_DEL_DIS(Pic_LINE_FUNCTION,682,750,813,814,682,750);
C51 COMPILER V9.00   XS_LINE_FUNCTION                                                      09/02/2024 14:01:21 PAGE 3   

 117          //                      if(flag == 0)
 118          //                      {
 119          //                              DIS_FONT_C(0x07,0xfe,2,0x03,731,764,"ON");
 120          //                      }
 121          //                      else
 122          //                      {
 123          //                              DIS_FONT_C(0x07,0xfe,3,0x03,723,764,"OFF");
 124          //                      }
 125          //                break;
 126          //      }
 127          //}
 128          //
 129          //
 130          //
 131          //
 132          //
 133          // 
 134          // 
 135          // 
 136          // 
 137          // 
 138          // 
 139          // 
 140          // 
 141          // 
 142          // 
 143          // 
 144          // 
 145          // 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
