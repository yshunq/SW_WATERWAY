C51 COMPILER V9.00   XS_RECORD_PROBE_TIMES                                                 09/27/2024 13:58:56 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE XS_RECORD_PROBE_TIMES
OBJECT MODULE PLACED IN ..\hex\XS_record_probe_times.obj
COMPILER INVOKED BY: C:\Keil _C51\C51\BIN\C51.EXE ..\main\XS_record_probe_times.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(
                    -..\user;..\display;..\common;..\cut) DEBUG OBJECTEXTEND PRINT(.\LIST\XS_record_probe_times.lst) OBJECT(..\hex\XS_record_
                    -probe_times.obj)

line level    source

   1          //#include "config.h"
   2          //
   3          //const u8  MAIN_KEY_RECORD_PROBE_TIMES = 9;
   4          //const u16 MAIN_RECORD_PROBE_TIMES[]=
   5          //{
   6          //      560,760,500,560,  //1 ·µ»Ø
   7          //       45,150,500,560,  //2   ÉèÖÃ
   8          //
   9          //       61,385,199,266,  //3
  10          //       61,385,268,337,  //4
  11          //       61,385,340,408,  //5
  12          //
  13          //      417,740,199,266,  //6
  14          //      417,740,268,337,  //7
  15          //      417,740,340,408,  //8
  16          //
  17          //      700,799,  0,100,  //9
  18          //};
  19          //
  20          //void count_record_probe_pic(u8 probe,u16 x,u16 y);
  21          //void dis_record_probe0_times(void);
  22          //void dis_record_probe1_times(void);
  23          //void dis_record_probe2_times(void);
  24          //void dis_record_probe3_times(void);
  25          //void dis_record_probe4_times(void);
  26          //void dis_record_probe5_times(void);
  27          //
  28          //void main_xs_record_probe_times(void)
  29          //{
  30          //      u8 key;
  31          //      u16 i,j;
  32          //      DIS_PICNUM(Pic_RECORD_PROBE_TIMES);
  33          //      dis_record_probe0_times();
  34          //      dis_record_probe1_times();
  35          //      dis_record_probe2_times();
  36          //      dis_record_probe3_times();
  37          //      dis_record_probe4_times();
  38          //      dis_record_probe5_times();
  39          //      i = 0;
  40          //      j = 0;
  41          //      do{
  42          //              delay_ms(1);
  43          //              if(KEY_YES!=0x00)
  44          //              {
  45          //                      ADS7843_KEY(); //É¨Ãè°´¼ü
  46          //                      key=KEY_FANHUI(MAIN_KEY_RECORD_PROBE_TIMES,MAIN_RECORD_PROBE_TIMES); 
  47          //                      switch(key)
  48          //                      {
  49          //                              case 1:
  50          //                                      XIANG1();
  51          //                                      INTERFACE = PAGE_XDRF_WORK;
  52          //                                      goto over_main_xs_probe_times;
  53          //                                      break;
C51 COMPILER V9.00   XS_RECORD_PROBE_TIMES                                                 09/27/2024 13:58:56 PAGE 2   

  54          //                              case 2:
  55          //                                      XIANG1();
  56          //                                      INTERFACE = PAGE_ADVANCED_SETTINGS;
  57          //                                      goto over_main_xs_probe_times;
  58          //                                      break;
  59          //                              case 3:
  60          //                                      if(XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[0] - 1] > 0 && XDRF_RECORD_ORDER_FLAG[0] > 0 && XDRF_R
             -ECORD_ORDER_FLAG[0] < 7){
  61          //                                              XIANG1();
  62          //                                              XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[0] - 1] = 0;
  63          //                                              dis_record_probe0_times();
  64          //                                              write_xdrf_probe_times(XDRF_RECORD_ORDER_FLAG[0]);
  65          //                                      }
  66          //                                      KEY_YES = 0;
  67          //                                      break;
  68          //                              case 4:
  69          //                                      if(XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[1] - 1] > 0 && XDRF_RECORD_ORDER_FLAG[1] > 0 && XDRF_R
             -ECORD_ORDER_FLAG[1] < 7){
  70          //                                              XIANG1();
  71          //                                              XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[1] - 1] = 0;
  72          //                                              dis_record_probe1_times();
  73          //                                              write_xdrf_probe_times(XDRF_RECORD_ORDER_FLAG[1]);
  74          //                                      }
  75          //                                      KEY_YES = 0;
  76          //                                      break;
  77          //                              case 5:
  78          //                                      if(XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[2] - 1] > 0 && XDRF_RECORD_ORDER_FLAG[2] > 0 && XDRF_R
             -ECORD_ORDER_FLAG[2] < 7){
  79          //                                              XIANG1();
  80          //                                              XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[2] - 1] = 0;
  81          //                                              dis_record_probe2_times();
  82          //                                              write_xdrf_probe_times(XDRF_RECORD_ORDER_FLAG[2]);
  83          //                                      }
  84          //                                      KEY_YES = 0;
  85          //                                      break;
  86          //                              case 6:
  87          //                                      if(XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[3] - 1] > 0 && XDRF_RECORD_ORDER_FLAG[3] > 0 && XDRF_R
             -ECORD_ORDER_FLAG[3] < 7){
  88          //                                              XIANG1();
  89          //                                              XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[3] - 1] = 0;
  90          //                                              dis_record_probe3_times();
  91          //                                              write_xdrf_probe_times(XDRF_RECORD_ORDER_FLAG[3]);
  92          //                                      }
  93          //                                      KEY_YES = 0;
  94          //                                      break;
  95          //                              case 7:
  96          //                                      if(XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[4] - 1] > 0 && XDRF_RECORD_ORDER_FLAG[4] > 0 && XDRF_R
             -ECORD_ORDER_FLAG[4] < 7){
  97          //                                              XIANG1();
  98          //                                              XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[4] - 1] = 0;
  99          //                                              dis_record_probe4_times();
 100          //                                              write_xdrf_probe_times(XDRF_RECORD_ORDER_FLAG[4]);
 101          //                                      }
 102          //                                      KEY_YES = 0;
 103          //                                      break;
 104          //                              case 8:
 105          //                                      if(XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[5] - 1] > 0 && XDRF_RECORD_ORDER_FLAG[5] > 0 && XDRF_R
             -ECORD_ORDER_FLAG[5] < 7){
 106          //                                              XIANG1();
 107          //                                              XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[5] - 1] = 0;
 108          //                                              dis_record_probe5_times();
 109          //                                              write_xdrf_probe_times(XDRF_RECORD_ORDER_FLAG[5]);
C51 COMPILER V9.00   XS_RECORD_PROBE_TIMES                                                 09/27/2024 13:58:56 PAGE 3   

 110          //                                      }
 111          //                                      KEY_YES = 0;
 112          //                                      break;
 113          //                              case 9:
 114          //                                      i=0;j++;
 115          //                                      if(j > 10){
 116          //                                              XIANG1();
 117          //                                              if(XDRF_PROBE_TIMES[1] > 0 || XDRF_PROBE_TIMES[2] > 0 || XDRF_PROBE_TIMES[3] > 0 || XDRF_PROBE_T
             -IMES[4] > 0 || XDRF_PROBE_TIMES[5] > 0 || XDRF_PROBE_TIMES[6] > 0 ||
 118          //                                                 XDRF_RECORD_ORDER_FLAG[0] > 0 || XDRF_RECORD_ORDER_FLAG[1] > 0 || XDRF_RECORD_ORDER_FLAG[2] > 0
             - || 
 119          //                                                 XDRF_RECORD_ORDER_FLAG[3] > 0 || XDRF_RECORD_ORDER_FLAG[4] > 0 || XDRF_RECORD_ORDER_FLAG[5] > 0
             -){
 120          //                                                              //XIANG1();
 121          //                                                              XDRF_RECORD_ORDER_FLAG[0] = 0;
 122          //                                                              XDRF_RECORD_ORDER_FLAG[1] = 0;
 123          //                                                              XDRF_RECORD_ORDER_FLAG[2] = 0;
 124          //                                                              XDRF_RECORD_ORDER_FLAG[3] = 0;
 125          //                                                              XDRF_RECORD_ORDER_FLAG[4] = 0;
 126          //                                                              XDRF_RECORD_ORDER_FLAG[5] = 0;
 127          //                                                              XDRF_PROBE_TIMES[0] = 0;
 128          //                                                              XDRF_PROBE_TIMES[1] = 0;
 129          //                                                              XDRF_PROBE_TIMES[2] = 0;
 130          //                                                              XDRF_PROBE_TIMES[3] = 0;
 131          //                                                              XDRF_PROBE_TIMES[4] = 0;
 132          //                                                              XDRF_PROBE_TIMES[5] = 0;
 133          //                                                              dis_record_probe0_times();
 134          //                                                              dis_record_probe1_times();
 135          //                                                              dis_record_probe2_times();
 136          //                                                              dis_record_probe3_times();
 137          //                                                              dis_record_probe4_times();
 138          //                                                              dis_record_probe5_times();
 139          //                                                              write_xdrf_record_order_flag(0);
 140          //                                                              write_xdrf_record_order_flag(1);
 141          //                                                              write_xdrf_record_order_flag(2);
 142          //                                                              write_xdrf_record_order_flag(3);
 143          //                                                              write_xdrf_record_order_flag(4);
 144          //                                                              write_xdrf_record_order_flag(5);
 145          //                                                              write_xdrf_probe_times(1);
 146          //                                                              write_xdrf_probe_times(2);
 147          //                                                              write_xdrf_probe_times(3);
 148          //                                                              write_xdrf_probe_times(4);
 149          //                                                              write_xdrf_probe_times(5);
 150          //                                                              write_xdrf_probe_times(6);
 151          //                                              }j = 0;
 152          //                                      }
 153          //                                      KEY_YES = 0;
 154          //                                      break;
 155          //                      }               
 156          //              }
 157          //
 158          //              i++;
 159          //              if(i > 1000){
 160          //                      i = 0;
 161          //                      j = 0;
 162          //              }
 163          //      }while(1);
 164          //      over_main_xs_probe_times:
 165          //      _nop_();
 166          //}
 167          //
 168          //void dis_record_probe0_times(void)
C51 COMPILER V9.00   XS_RECORD_PROBE_TIMES                                                 09/27/2024 13:58:56 PAGE 4   

 169          //{
 170          //      u16 total;
 171          //      if(XDRF_RECORD_ORDER_FLAG[0] > 0 && XDRF_RECORD_ORDER_FLAG[0] <= 6){
 172          //              total = XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[0] - 1];
 173          //              DIS_FONT_WEI_NUMBER_CM(Pic_RECORD_PROBE_TIMES,1,0x07,0xdd,0x03,total,5,283,217);
 174          //      }else{
 175          //              DIS_DEL_DIS(Pic_RECORD_PROBE_TIMES,261,198,385,266,261,198);
 176          //      }
 177          //      count_record_probe_pic(XDRF_RECORD_ORDER_FLAG[0],60,198);
 178          //}
 179          //
 180          //void dis_record_probe1_times(void)
 181          //{
 182          //      u16 total;
 183          //      if(XDRF_RECORD_ORDER_FLAG[1] > 0 && XDRF_RECORD_ORDER_FLAG[1] <= 6){
 184          //              total = XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[1] - 1];
 185          //              DIS_FONT_WEI_NUMBER_CM(Pic_RECORD_PROBE_TIMES,1,0x07,0xdd,0x03,total,5,283,287);
 186          //      }else{
 187          //              DIS_DEL_DIS(Pic_RECORD_PROBE_TIMES,261,268,385,337,261,268);
 188          //      }
 189          //      count_record_probe_pic(XDRF_RECORD_ORDER_FLAG[1],60,268);
 190          //}
 191          //
 192          //void dis_record_probe2_times(void)
 193          //{
 194          //      u16 total;
 195          //      if(XDRF_RECORD_ORDER_FLAG[2] > 0 && XDRF_RECORD_ORDER_FLAG[2] <= 6){
 196          //              total = XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[2] - 1];
 197          //              DIS_FONT_WEI_NUMBER_CM(Pic_RECORD_PROBE_TIMES,1,0x07,0xdd,0x03,total,5,283,357);
 198          //      }else{
 199          //              DIS_DEL_DIS(Pic_RECORD_PROBE_TIMES,261,339,385,407,261,339);
 200          //      }
 201          //      count_record_probe_pic(XDRF_RECORD_ORDER_FLAG[2],60,339);
 202          //}
 203          //
 204          //void dis_record_probe3_times(void)
 205          //{
 206          //      u16 total;
 207          //      if(XDRF_RECORD_ORDER_FLAG[3] > 0 && XDRF_RECORD_ORDER_FLAG[3] <= 6){
 208          //              total = XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[3] - 1];
 209          //              DIS_FONT_WEI_NUMBER_CM(Pic_RECORD_PROBE_TIMES,1,0x07,0xdd,0x03,total,5,639,217);
 210          //      }else{
 211          //              DIS_DEL_DIS(Pic_RECORD_PROBE_TIMES,618,198,742,266,618,198);
 212          //      }
 213          //      count_record_probe_pic(XDRF_RECORD_ORDER_FLAG[3],417,198);
 214          //}
 215          //
 216          //void dis_record_probe4_times(void)
 217          //{
 218          //      u16 total;
 219          //      if(XDRF_RECORD_ORDER_FLAG[4] > 0 && XDRF_RECORD_ORDER_FLAG[4] <= 6){
 220          //              total = XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[4] - 1];
 221          //              DIS_FONT_WEI_NUMBER_CM(Pic_RECORD_PROBE_TIMES,1,0x07,0xdd,0x03,total,5,639,287);
 222          //      }else{
 223          //              DIS_DEL_DIS(Pic_RECORD_PROBE_TIMES,618,268,742,337,618,268);
 224          //      }
 225          //      count_record_probe_pic(XDRF_RECORD_ORDER_FLAG[4],417,268);
 226          //}
 227          //
 228          //void dis_record_probe5_times(void)
 229          //{
 230          //      u16 total;
C51 COMPILER V9.00   XS_RECORD_PROBE_TIMES                                                 09/27/2024 13:58:56 PAGE 5   

 231          //      if(XDRF_RECORD_ORDER_FLAG[5] > 0 && XDRF_RECORD_ORDER_FLAG[5] <= 6){
 232          //              total = XDRF_PROBE_TIMES[XDRF_RECORD_ORDER_FLAG[5] - 1];
 233          //              DIS_FONT_WEI_NUMBER_CM(Pic_RECORD_PROBE_TIMES,1,0x07,0xdd,0x03,total,5,639,357);
 234          //      }else{
 235          //              DIS_DEL_DIS(Pic_RECORD_PROBE_TIMES,618,339,742,407,618,339);
 236          //      }
 237          //      count_record_probe_pic(XDRF_RECORD_ORDER_FLAG[5],417,339);
 238          //}
 239          //
 240          //void count_record_probe_pic(u8 probe,u16 x,u16 y)
 241          //{
 242          //      switch(probe){
 243          //              case  0:DIS_DEL_DIS(Pic_RECORD_PROBE_TIMES,60,198,385,266,x,y);break;//0
 244          //              case  1:DIS_DEL_DIS(Pic_CUT1,392,  0,591, 68,x,y);break;//1
 245          //              case  2:DIS_DEL_DIS(Pic_CUT1,392, 70,591,138,x,y);break;//2
 246          //              case  3:DIS_DEL_DIS(Pic_CUT1,392,140,591,208,x,y);break;//3
 247          //              case  4:DIS_DEL_DIS(Pic_CUT1,593,  0,792, 68,x,y);break;//4
 248          //              case  5:DIS_DEL_DIS(Pic_CUT1,593, 70,792,138,x,y);break;//5
 249          //              case  6:DIS_DEL_DIS(Pic_CUT1,593,140,792,208,x,y);break;//6
 250          //      }
 251          //}
 252          //
 253          //
 254          //
 255          //
 256          //
 257          //
 258          //
 259          //
 260          //
 261          //
 262          //
 263          //
 264          //
 265          //
 266          //
 267          //
 268          //
 269          //
 270          //
 271          //
 272          //
 273          //
 274          //
 275          //
 276          //
 277          //


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
